%!PS-Adobe-2.0 EPSF-2.0
%%Title: pixelgeb_gggrs_filled.eps
%%Creator: gnuplot-boxfill.pl
%%CreationDate: Thu Nov  3 11:52:16 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 176
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -40 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {gsave 0 setgray
 currentpoint stroke M
  0 vshift R show grestore
} def
/Rshow {gsave 0 setgray
 currentpoint stroke M
  dup stringwidth pop neg vshift R show grestore
} def
/Cshow {gsave 0 setgray
 currentpoint stroke M
  dup stringwidth pop -2 div vshift R show grestore
} def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/BfDL { Color {8 exch sub 4 div 1 sub 0.15 sub setgray Solid {pop []} if 0 setdash }
 {pop Solid {pop []} if 0 setdash} ifelse } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 BfDL } def
/LT1 { PL [4 dl 2 dl] 1 BfDL } def
/LT2 { PL [2 dl 3 dl] 2 BfDL } def
/LT3 { PL [1 dl 1.5 dl] 3 BfDL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 4 BfDL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 5 BfDL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 6 BfDL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 7 BfDL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 8 BfDL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/Time-Roman reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Time-Roman) findfont 120 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
564 144 M
6432 0 V
1.000 UL
LTb
564 144 M
63 0 V
6369 0 R
-63 0 V
stroke
492 144 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.15)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 423 M
6432 0 V
1.000 UL
LTb
564 423 M
63 0 V
6369 0 R
-63 0 V
stroke
492 423 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 702 M
6432 0 V
1.000 UL
LTb
564 702 M
63 0 V
6369 0 R
-63 0 V
stroke
492 702 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.25)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 981 M
6432 0 V
1.000 UL
LTb
564 981 M
63 0 V
6369 0 R
-63 0 V
stroke
492 981 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.3)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 1260 M
6432 0 V
1.000 UL
LTb
564 1260 M
63 0 V
6369 0 R
-63 0 V
stroke
492 1260 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.35)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 1539 M
6432 0 V
1.000 UL
LTb
564 1539 M
63 0 V
6369 0 R
-63 0 V
stroke
492 1539 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 1818 M
6432 0 V
1.000 UL
LTb
564 1818 M
63 0 V
6369 0 R
-63 0 V
stroke
492 1818 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.45)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 2097 M
72 0 V
1287 0 R
5073 0 V
1.000 UL
LTb
564 2097 M
63 0 V
6369 0 R
-63 0 V
stroke
492 2097 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.5)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
564 2376 M
6432 0 V
1.000 UL
LTb
564 2376 M
63 0 V
6369 0 R
-63 0 V
stroke
492 2376 M
[ [(Time-Roman) 120.0 0.0 true true 0 ( 0.55)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
564 144 M
6432 0 V
0 2232 V
-6432 0 V
564 144 L
1.000 UP
LTb
704 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (1a)]
] -28.0 MCshow
LTb
983 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (1b)]
] -28.0 MCshow
LTb
1263 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (1c)]
] -28.0 MCshow
LTb
1543 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (2)]
] -28.0 MCshow
LTb
1822 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (3)]
] -28.0 MCshow
LTb
2102 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (5)]
] -28.0 MCshow
LTb
2382 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (5c)]
] -28.0 MCshow
LTb
2661 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (6)]
] -28.0 MCshow
LTb
2941 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (6c)]
] -28.0 MCshow
LTb
3221 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (7)]
] -28.0 MCshow
LTb
3500 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (7c)]
] -28.0 MCshow
LTb
3780 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (8)]
] -28.0 MCshow
LTb
4060 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (8c)]
] -28.0 MCshow
LTb
4339 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (9)]
] -28.0 MCshow
LTb
4619 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (9c)]
] -28.0 MCshow
LTb
4899 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (10)]
] -28.0 MCshow
LTb
5178 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (10c)]
] -28.0 MCshow
LTb
5458 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (11)]
] -28.0 MCshow
LTb
5738 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (11c)]
] -28.0 MCshow
LTb
6017 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (12)]
] -28.0 MCshow
LTb
6297 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (13)]
] -28.0 MCshow
LTb
6577 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (I3)]
] -28.0 MCshow
LTb
6856 32 M
[ [(Time-Roman) 120.0 0.0 true true 0 (M)]
[(Time-Roman) 96.0 -36.0 true true 0 (I3c)]
] -28.0 MCshow
1.000 UL
LT1
LTb
1428 2253 M
[ [(Time-Roman) 120.0 0.0 true true 0 (grijswaarde)]
] -40.0 MRshow
LT1
1500 2223 351 60 BoxFill
1500 2223 M
gsave
/redo{351 0 V
0 60 V
-351 0 V
0 -60 V} bind def
currentpoint M redo fill
grestore
613 144 M
gsave
/redo{0 637 V
70 0 V
0 -637 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 539 V
70 0 V
0 -539 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 460 V
70 0 V
0 -460 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 758 V
70 0 V
0 -758 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 441 V
69 0 V
0 -441 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 510 V
70 0 V
0 -510 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 698 V
70 0 V
0 -698 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 446 V
69 0 V
0 -446 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 803 V
70 0 V
0 -803 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 484 V
70 0 V
0 -484 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 823 V
70 0 V
0 -823 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1361 V
70 0 V
0 -1361 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1434 V
70 0 V
0 -1434 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 513 V
70 0 V
0 -513 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 791 V
70 0 V
0 -791 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1349 V
70 0 V
0 -1349 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 1352 V
70 0 V
0 -1352 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 510 V
70 0 V
0 -510 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 698 V
70 0 V
0 -698 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 484 V
70 0 V
0 -484 V
-70 0 V} bind def
currentpoint M redo fill
grestore
stroke
6206 144 M
gsave
/redo{0 1312 V
70 0 V
0 -1312 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 465 V
70 0 V
0 -465 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 676 V
70 0 V
0 -676 V
-70 0 V} bind def
currentpoint M redo fill
grestore
1.000 UL
LT2
LTb
1428 2133 M
[ [(Time-Roman) 120.0 0.0 true true 0 (componenten)]
] -40.0 MRshow
LT2
1500 2103 351 60 BoxFill
1500 2103 M
gsave
/redo{351 0 V
0 60 V
-351 0 V
0 -60 V} bind def
currentpoint M redo fill
grestore
669 144 M
gsave
/redo{0 245 V
70 0 V
0 -245 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 208 V
69 0 V
0 -208 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 227 V
70 0 V
0 -227 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 358 V
70 0 V
0 -358 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 302 V
70 0 V
0 -302 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 173 V
70 0 V
0 -173 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 216 V
70 0 V
0 -216 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 329 V
70 0 V
0 -329 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 438 V
70 0 V
0 -438 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 290 V
70 0 V
0 -290 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 400 V
70 0 V
0 -400 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1583 V
70 0 V
0 -1583 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1524 V
70 0 V
0 -1524 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 245 V
70 0 V
0 -245 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 386 V
70 0 V
0 -386 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1511 V
70 0 V
0 -1511 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 1429 V
70 0 V
0 -1429 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 173 V
70 0 V
0 -173 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 216 V
70 0 V
0 -216 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 290 V
70 0 V
0 -290 V
-70 0 V} bind def
currentpoint M redo fill
grestore
stroke
6262 144 M
gsave
/redo{0 1569 V
70 0 V
0 -1569 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 403 V
69 0 V
0 -403 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 287 V
70 0 V
0 -287 V
-70 0 V} bind def
currentpoint M redo fill
grestore
1.000 UL
LT3
LTb
1428 2013 M
[ [(Time-Roman) 120.0 0.0 true true 0 (tralie)]
] -40.0 MRshow
LT3
1500 1983 351 60 BoxFill
1500 1983 M
gsave
/redo{351 0 V
0 60 V
-351 0 V
0 -60 V} bind def
currentpoint M redo fill
grestore
725 144 M
gsave
/redo{0 145 V
70 0 V
0 -145 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 74 V
70 0 V
0 -74 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 25 V
70 0 V
0 -25 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 412 V
70 0 V
0 -412 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 70 V
70 0 V
0 -70 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 430 V
70 0 V
0 -430 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 604 V
70 0 V
0 -604 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 594 V
70 0 V
0 -594 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1161 V
70 0 V
0 -1161 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 477 V
70 0 V
0 -477 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 972 V
70 0 V
0 -972 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1703 V
70 0 V
0 -1703 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 2025 V
70 0 V
0 -2025 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 516 V
70 0 V
0 -516 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 936 V
70 0 V
0 -936 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1838 V
69 0 V
0 -1838 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 1988 V
70 0 V
0 -1988 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 430 V
70 0 V
0 -430 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 604 V
69 0 V
0 -604 V
-69 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 477 V
70 0 V
0 -477 V
-70 0 V} bind def
currentpoint M redo fill
grestore
stroke
6318 144 M
gsave
/redo{0 1703 V
70 0 V
0 -1703 V
-70 0 V} bind def
currentpoint M redo fill
grestore
279 0 R
gsave
/redo{0 643 V
70 0 V
0 -643 V
-70 0 V} bind def
currentpoint M redo fill
grestore
280 0 R
gsave
/redo{0 1095 V
70 0 V
0 -1095 V
-70 0 V} bind def
currentpoint M redo fill
grestore
1.000 UL
LTb
564 144 M
6432 0 V
0 2232 V
-6432 0 V
564 144 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Time-Roman
