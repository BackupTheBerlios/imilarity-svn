import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import de.berlios.imilarity.image.ComponentImage;
import de.berlios.imilarity.image.Image;
import de.berlios.imilarity.image.ImageData;
import de.berlios.imilarity.image.PartOfImage;


public class DCT {
	
	private static final String OUTPUT_DIR = "/home/klbostee/Temp";
	private static final int PART_W = 8, PART_H = 8;
	
	// De code
	// 
	// for (int i = 0; i < 8; i++) {
	//   for (int x = 0; x < 8; x++)
	//     System.out.print(""+Math.cos((i*1.0/8)*(x+0.5)*Math.PI)+", ");
	//   System.out.println();
	// }
	//
	// geeft:

	private static final double[][] BASIS = { // 8x8
		 new double[] { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 }, 
		 new double[] { 0.9807852804032304, 0.8314696123025452, 0.5555702330196023, 0.19509032201612833, -0.1950903220161282, -0.555570233019602, -0.8314696123025453, -0.9807852804032304 }, 
		 new double[] { 0.9238795325112867, 0.38268343236508984, -0.3826834323650897, -0.9238795325112867, -0.9238795325112868, -0.38268343236509034, 0.38268343236509, 0.9238795325112865 }, 
		 new double[] { 0.8314696123025452, -0.1950903220161282, -0.9807852804032304, -0.5555702330196022, 0.5555702330196018, 0.9807852804032304, 0.19509032201612878, -0.8314696123025451 }, 
		 new double[] { 0.7071067811865476, -0.7071067811865475, -0.7071067811865477, 0.7071067811865474, 0.7071067811865477, -0.7071067811865467, -0.7071067811865471, 0.7071067811865466 }, 
		 new double[] { 0.5555702330196023, -0.9807852804032304, 0.1950903220161283, 0.8314696123025456, -0.8314696123025451, -0.19509032201612803, 0.9807852804032307, -0.5555702330196015 }, 
		 new double[] { 0.38268343236508984, -0.9238795325112868, 0.9238795325112865, -0.3826834323650899, -0.38268343236509056, 0.9238795325112867, -0.9238795325112864, 0.38268343236508956 }, 
		 new double[] { 0.19509032201612833, -0.5555702330196022, 0.8314696123025456, -0.9807852804032307, 0.9807852804032304, -0.831469612302545, 0.5555702330196015, -0.19509032201612858 } 
	};
	
//	private static final double[][] BASIS = { // 16x16
//		new double[] { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  },
//		new double[] { 0.9807852804032304, 0.8314696123025452, 0.5555702330196023, 0.19509032201612833, -0.1950903220161282, -0.555570233019602, -0.8314696123025453, -0.9807852804032304, -0.9807852804032304, -0.8314696123025455, -0.5555702330196022, -0.19509032201612866, 0.1950903220161283, 0.5555702330196018, 0.8314696123025452, 0.9807852804032303  },
//		new double[] { 0.9238795325112867, 0.38268343236508984, -0.3826834323650897, -0.9238795325112867, -0.9238795325112868, -0.38268343236509034, 0.38268343236509, 0.9238795325112865, 0.9238795325112867, 0.38268343236509045, -0.3826834323650899, -0.9238795325112864, -0.9238795325112867, -0.38268343236509056, 0.3826834323650898, 0.9238795325112864  },
//		new double[] { 0.8314696123025452, -0.1950903220161282, -0.9807852804032304, -0.5555702330196022, 0.5555702330196018, 0.9807852804032304, 0.19509032201612878, -0.8314696123025451, -0.8314696123025456, 0.1950903220161272, 0.9807852804032304, 0.5555702330196025, -0.5555702330196015, -0.9807852804032307, -0.19509032201613002, 0.831469612302544  },
//		new double[] { 0.7071067811865476, -0.7071067811865475, -0.7071067811865477, 0.7071067811865474, 0.7071067811865477, -0.7071067811865467, -0.7071067811865471, 0.7071067811865466, 0.7071067811865472, -0.7071067811865465, -0.7071067811865474, 0.7071067811865465, 0.7071067811865475, -0.7071067811865464, -0.7071067811865476, 0.7071067811865462  },
//		new double[] { 0.5555702330196023, -0.9807852804032304, 0.1950903220161283, 0.8314696123025456, -0.8314696123025451, -0.19509032201612803, 0.9807852804032307, -0.5555702330196015, -0.5555702330196026, 0.9807852804032304, -0.19509032201612858, -0.8314696123025449, 0.8314696123025438, 0.19509032201613036, -0.9807852804032308, 0.5555702330196011  },
//		new double[] { 0.38268343236508984, -0.9238795325112868, 0.9238795325112865, -0.3826834323650899, -0.38268343236509056, 0.9238795325112867, -0.9238795325112864, 0.38268343236508956, 0.3826834323650909, -0.9238795325112876, 0.923879532511287, -0.3826834323650892, -0.3826834323650912, 0.9238795325112877, -0.9238795325112854, 0.38268343236508556  },
//		new double[] { 0.19509032201612833, -0.5555702330196022, 0.8314696123025456, -0.9807852804032307, 0.9807852804032304, -0.831469612302545, 0.5555702330196015, -0.19509032201612858, -0.19509032201613025, 0.5555702330196028, -0.831469612302545, 0.9807852804032309, -0.9807852804032297, 0.8314696123025456, -0.5555702330196007, 0.19509032201612425  },
//		new double[] { 6.123233995736766E-17, -1.8369701987210297E-16, 3.061616997868383E-16, -4.286263797015736E-16, 5.51091059616309E-16, -2.4499125789312946E-15, -9.803364199544708E-16, -2.6948419387607653E-15, -7.354070601250002E-16, -2.939771298590236E-15, -4.904777002955296E-16, -3.1847006584197066E-15, -2.45548340466059E-16, -3.4296300182491773E-15, -6.189806365883577E-19, -3.674559378078648E-15  },
//		new double[] { -0.1950903220161282, 0.5555702330196018, -0.8314696123025451, 0.9807852804032304, -0.9807852804032307, 0.8314696123025448, -0.5555702330196027, 0.19509032201613036, 0.19509032201612822, -0.555570233019601, 0.8314696123025456, -0.9807852804032295, 0.9807852804032309, -0.8314696123025453, 0.5555702330196066, -0.19509032201613144  },
//		new double[] { -0.3826834323650897, 0.9238795325112865, -0.9238795325112867, 0.38268343236509067, 0.38268343236508956, -0.923879532511287, 0.9238795325112876, -0.3826834323650912, -0.382683432365089, 0.9238795325112867, -0.9238795325112865, 0.3826834323650885, 0.3826834323650851, -0.9238795325112851, 0.9238795325112881, -0.3826834323650924  },
//		new double[] { -0.555570233019602, 0.9807852804032304, -0.19509032201612803, -0.831469612302545, 0.8314696123025448, 0.19509032201612844, -0.9807852804032303, 0.5555702330196061, 0.5555702330196038, -0.9807852804032302, 0.1950903220161276, 0.8314696123025452, -0.8314696123025456, -0.19509032201612714, 0.9807852804032301, -0.5555702330196102  },
//		new double[] { -0.7071067811865475, 0.7071067811865477, 0.7071067811865466, -0.7071067811865474, -0.7071067811865464, 0.7071067811865476, 0.707106781186546, -0.7071067811865479, -0.7071067811865458, 0.7071067811865507, 0.7071067811865481, -0.7071067811865483, -0.7071067811865454, 0.7071067811865511, 0.7071067811865425, -0.7071067811865539  },
//		new double[] { -0.8314696123025453, 0.19509032201612878, 0.9807852804032307, 0.5555702330196015, -0.5555702330196027, -0.9807852804032303, -0.19509032201612808, 0.8314696123025471, 0.8314696123025453, -0.19509032201613122, -0.9807852804032303, -0.5555702330196002, 0.5555702330196071, 0.9807852804032301, 0.19509032201612303, -0.83146961230255  },
//		new double[] { -0.9238795325112867, -0.3826834323650899, 0.38268343236509067, 0.9238795325112875, 0.923879532511287, 0.3826834323650891, -0.38268343236509145, -0.9238795325112865, -0.9238795325112852, -0.3826834323650883, 0.382683432365089, 0.9238795325112882, 0.9238795325112835, 0.3826834323650908, -0.38268343236509306, -0.9238795325112898  },
//		new double[] { -0.9807852804032304, -0.8314696123025451, -0.5555702330196015, -0.19509032201612858, 0.19509032201613036, 0.5555702330196061, 0.8314696123025471, 0.9807852804032309, 0.9807852804032302, 0.8314696123025451, 0.555570233019603, 0.19509032201613025, -0.19509032201613216, -0.5555702330196105, -0.8314696123025462, -0.980785280403232  },
//	};
	
	public static double dct(Image image, int i, int j) {
		double sum = 0.0;
		double v1 = (i == 0) ? Math.pow(1.0/PART_W,0.5) : Math.pow(2.0/PART_W,0.5);
		double v2 = (j == 0) ? Math.pow(1.0/PART_H,0.5) : Math.pow(2.0/PART_H,0.5);
		for (int x = 0; x < PART_W; x++) {
			for (int y = 0; y < PART_H; y++) {
				double comps[] = image.getColor(x, y).getComponents();
				double g = 0.0;
				for (int k = 0; k < comps.length; k++)
					g += comps[k];
				g /= comps.length;
				sum += v1*v2 * BASIS[i][x] * BASIS[j][y] * (int)(g*255);
			}
		}
		return sum;
	}
	
	public static void main(String[] args) throws IOException {
		ImageData imageData = ImageData.loadFile("/home/klbostee/Thesis/Misc/autumn.png");
		Image image = imageData.getRgbImage();
		BufferedImage outImage = 
			new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_RGB);
		int width = (image.getWidth() / PART_W) * PART_W;
		int height = (image.getHeight() / PART_H) * PART_H;
		int pc = width * height;
		for (int i = 0; i < pc; i++) {
			int partX = (i % width) % PART_W; // = x % PART_W
			int partY = (i / width) % PART_H; // = y % PART_H
			if (partX == 0 && partY == 0) {
				int c = (i % width) / PART_W; // = x / PART_W
				int r = (i / width) / PART_H; // = y / PART_H
				int ox = c*PART_W;
				int oy = r*PART_H;
				Image poi = new PartOfImage(image, ox,oy,PART_W,PART_H);
				for (int ii = 0; ii < PART_W; ii++) {
					for (int jj = 0; jj < PART_H; jj++) {
						int dct[] = new int[3];
						for (int k = 0; k < 3; k++) {
							dct[k] = Math.abs((int) dct(new ComponentImage(poi,k), ii, jj));
							if (dct[k] > 255) dct[k] = 255;
						}
						outImage.setRGB(ox+ii, oy+jj, (new Color(dct[0],dct[1],dct[2])).getRGB());
					}
				}
				//break; // temp!!!
			}
		}
		
		ImageIO.write(outImage, "png", new File(OUTPUT_DIR+"/dct_autumn.png"));
		System.out.println("done");
	}
}
